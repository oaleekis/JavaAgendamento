package View;

import Control.PacienteControl;
import Control.MedicoControl;
import Control.AgendamentoControl;
import Model.Medico;
import Model.Paciente;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Agendamento extends javax.swing.JFrame {

    private PacienteControl controladorpaciente;
    private MedicoControl controladormedico;
    private AgendamentoControl controladoragendamento;
    private Date Data;

    public Agendamento() {
        initComponents();

        this.controladormedico = new MedicoControl();
        this.controladorpaciente = new PacienteControl();
        this.controladoragendamento = new AgendamentoControl();
        carregaCombo();
        carregaTabela();
        carregaTabelaAgendamento();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_agendamentos = new javax.swing.JTable();
        t_data = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_pacientes = new javax.swing.JTable();
        b_excluir = new javax.swing.JButton();
        b_alterar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        b_agendar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        t_hora = new javax.swing.JTextField();
        cb_medicos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        t_paciente = new javax.swing.JTextField();
        t_telefone = new javax.swing.JTextField();
        t_idpaciente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setTitle("Agendamento");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jt_agendamentos.setAutoCreateRowSorter(true);
        jt_agendamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "id Paciente", "Paciente", "Telefone", "Data", "Horário Agendado", "Médico"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_agendamentos.setInheritsPopupMenu(true);
        jt_agendamentos.setShowHorizontalLines(false);
        jt_agendamentos.setShowVerticalLines(false);
        jt_agendamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_agendamentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_agendamentos);
        if (jt_agendamentos.getColumnModel().getColumnCount() > 0) {
            jt_agendamentos.getColumnModel().getColumn(0).setResizable(false);
            jt_agendamentos.getColumnModel().getColumn(0).setPreferredWidth(5);
            jt_agendamentos.getColumnModel().getColumn(1).setResizable(false);
            jt_agendamentos.getColumnModel().getColumn(2).setResizable(false);
            jt_agendamentos.getColumnModel().getColumn(3).setResizable(false);
            jt_agendamentos.getColumnModel().getColumn(4).setResizable(false);
            jt_agendamentos.getColumnModel().getColumn(5).setResizable(false);
            jt_agendamentos.getColumnModel().getColumn(6).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 382, 680, 132));
        getContentPane().add(t_data, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 294, 124, -1));

        jLabel1.setText("Data:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 294, -1, 20));

        jt_pacientes.setAutoCreateRowSorter(true);
        jt_pacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nome", "Telefone", "Endereço", "Data de Nascimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_pacientes.setShowHorizontalLines(false);
        jt_pacientes.setShowVerticalLines(false);
        jt_pacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_pacientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_pacientes);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 680, 135));

        b_excluir.setBackground(new java.awt.Color(0, 204, 153));
        b_excluir.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_excluir.setForeground(new java.awt.Color(255, 255, 255));
        b_excluir.setText("Excluir");
        b_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_excluirActionPerformed(evt);
            }
        });
        getContentPane().add(b_excluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, 90, -1));

        b_alterar.setBackground(new java.awt.Color(0, 204, 153));
        b_alterar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_alterar.setForeground(new java.awt.Color(255, 255, 255));
        b_alterar.setText("Alterar");
        b_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_alterarActionPerformed(evt);
            }
        });
        getContentPane().add(b_alterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 90, -1));

        jButton1.setBackground(new java.awt.Color(0, 204, 153));
        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Atualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(598, 152, -1, -1));

        b_agendar.setBackground(new java.awt.Color(0, 204, 153));
        b_agendar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        b_agendar.setForeground(new java.awt.Color(255, 255, 255));
        b_agendar.setText("Agendar");
        b_agendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_agendarActionPerformed(evt);
            }
        });
        getContentPane().add(b_agendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, -1, -1));

        jLabel3.setText("Hora:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 297, 33, -1));
        getContentPane().add(t_hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 294, 90, -1));

        cb_medicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_medicosActionPerformed(evt);
            }
        });
        getContentPane().add(cb_medicos, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 319, 280, -1));

        jLabel4.setText("Médico:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 323, -1, -1));

        jLabel2.setText("Nome:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 212, -1, -1));

        jLabel5.setText("Telefone:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 238, -1, -1));

        t_paciente.setEditable(false);
        t_paciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_pacienteActionPerformed(evt);
            }
        });
        getContentPane().add(t_paciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 209, 281, -1));

        t_telefone.setEditable(false);
        getContentPane().add(t_telefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 235, 123, -1));

        t_idpaciente.setEditable(false);
        getContentPane().add(t_idpaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 183, 60, -1));

        jLabel6.setText("Id:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 186, -1, -1));

        jLabel7.setText("Paciente:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 158, -1, -1));

        jLabel9.setText("Agendamento:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 274, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Imagens/medicina22.png"))); // NOI18N
        jLabel8.setMaximumSize(new java.awt.Dimension(701, 525));
        jLabel8.setMinimumSize(new java.awt.Dimension(701, 525));
        jLabel8.setPreferredSize(new java.awt.Dimension(701, 525));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 701, 525));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jt_pacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_pacientesMouseClicked

        if (this.jt_pacientes.getSelectedRow() != -1) {

            String idpaciente = this.jt_pacientes.getValueAt(this.jt_pacientes.getSelectedRow(), 0).toString();
            String paciente = this.jt_pacientes.getValueAt(this.jt_pacientes.getSelectedRow(), 1).toString();
            String telefone = this.jt_pacientes.getValueAt(this.jt_pacientes.getSelectedRow(), 2).toString();

            this.t_idpaciente.setText(idpaciente);
            this.t_paciente.setText(paciente);
            this.t_telefone.setText(telefone);

        }

    }//GEN-LAST:event_jt_pacientesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.t_idpaciente.setText("");
        this.t_paciente.setText("");
        this.t_telefone.setText("");
        this.t_hora.setText("");
        this.t_data.setDate(null);

        carregaCombo();
        carregaTabela();
        carregaTabelaAgendamento();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cb_medicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_medicosActionPerformed

    }//GEN-LAST:event_cb_medicosActionPerformed

    private void b_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_excluirActionPerformed
        try {

            int id = 0;
            if (this.jt_agendamentos.getSelectedRow() == -1) {
                throw new Mensagens("Primeiro Selecione um Agendamento para APAGAR");
            } else {
                id = Integer.parseInt(this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 0).toString());
            }

            int resposta_usuario = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja APAGAR este Agendamento ?");

            if (resposta_usuario == 0) {

                if (this.controladoragendamento.Apagar(id)) {

                    this.t_idpaciente.setText("");
                    this.t_paciente.setText("");
                    this.t_telefone.setText("");
                    this.t_hora.setText("");
                    this.t_data.setDate(null);

                    JOptionPane.showMessageDialog(rootPane, "Agendamento Apagado com Sucesso!");

                }

            }

        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } finally {

            carregaTabela();
            carregaTabelaAgendamento();
        }
    }//GEN-LAST:event_b_excluirActionPerformed

    private void b_agendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_agendarActionPerformed

        try {

            Paciente idpaciente = new Paciente();
            long telefone = 0;
            String data = "";
            String horario = "";
            Medico idmedico = null;

            telefone = Long.parseLong(this.t_telefone.getText());

            if (this.t_hora.getText().length() < 2) {
                throw new Mensagens("Hora deve conter ao menos 2 caracteres.");
            } else {
                horario = this.t_hora.getText();
            }
            idmedico = (Medico) this.cb_medicos.getSelectedItem();

            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String date = sdf.format(t_data.getDate());

            data = date;

            idpaciente.setId(Integer.parseInt(jt_pacientes.getValueAt(this.jt_pacientes.getSelectedRow(), 0).toString()));

            if (this.controladoragendamento.Cadastrar(idpaciente, telefone, data, horario, idmedico)) {
                JOptionPane.showMessageDialog(rootPane, "Agendamento Cadastrado com Sucesso!");

                this.t_idpaciente.setText("");
                this.t_paciente.setText("");
                this.t_telefone.setText("");
                this.t_hora.setText("");
                this.t_data.setDate(null);

            }

        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Informe um número.");
        } catch (SQLException ex) {

        }
        carregaTabela();
        carregaTabelaAgendamento();
    }//GEN-LAST:event_b_agendarActionPerformed

    private void jt_agendamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_agendamentosMouseClicked
        if (this.jt_agendamentos.getSelectedRow() != -1) {
            String idpaciente = this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 1).toString();
            String paciente = this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 2).toString();
            String telefone = this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 3).toString();
            String data = this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 4).toString();
            String hora = this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 5).toString();
            String medico = this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 6).toString();

            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            try {
                Data = sdf.parse(data);
            } catch (ParseException ex) {
                Logger.getLogger(CadastroPaciente.class.getName()).log(Level.SEVERE, null, ex);
            }

            this.t_idpaciente.setText(idpaciente);
            this.t_paciente.setText(paciente);
            this.t_telefone.setText(telefone);
            this.t_hora.setText(hora);
            this.t_data.setDate(Data);
            this.cb_medicos.setSelectedItem(medico);

        }
    }//GEN-LAST:event_jt_agendamentosMouseClicked

    private void b_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_alterarActionPerformed
        try {

            int id = 0;
            Paciente idpaciente = new Paciente();
            long telefone = 0;
            String data = "";
            String horario = "";
            Medico idmedico = null;

            telefone = Long.parseLong(this.t_telefone.getText());

            if (this.t_hora.getText().length() < 2) {
                throw new Mensagens("Hora deve conter ao menos 2 caracteres.");
            } else {
                horario = this.t_hora.getText();
            }
            idmedico = (Medico) this.cb_medicos.getSelectedItem();

            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String date = sdf.format(t_data.getDate());

            data = date;
            
            idpaciente.setId(Integer.parseInt(jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 1).toString()));

            if (this.jt_agendamentos.getSelectedRow() < 0) {
                throw new Mensagens("Primeiro Selecione um Agendamento para Alterar");
            } else {
                id = Integer.parseInt(this.jt_agendamentos.getValueAt(this.jt_agendamentos.getSelectedRow(), 0).toString());
                System.out.println(id);
            }

            if (this.controladoragendamento.Editar(id, idpaciente, telefone, data, horario, idmedico)) {

                this.t_idpaciente.setText("");
                this.t_paciente.setText("");
                this.t_telefone.setText("");
                this.t_hora.setText("");
                this.t_data.setDate(null);

                JOptionPane.showMessageDialog(rootPane, "Agendamento Alterado com Sucesso!");
                
            }

        } catch (Mensagens erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } catch (NumberFormatException erro2) {
            JOptionPane.showMessageDialog(null, "Informe um número.");
        } finally {
            carregaTabela();
            carregaTabelaAgendamento();
        }
    }//GEN-LAST:event_b_alterarActionPerformed

    private void t_pacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_pacienteActionPerformed

    }//GEN-LAST:event_t_pacienteActionPerformed

    public void carregaCombo() {

        cb_medicos.removeAllItems();

        List<Medico> lista = new ArrayList();

        lista = controladormedico.getMinhaLista();

        for (Medico medico : lista) {
            cb_medicos.addItem(medico);

        }

    }

    public void carregaTabela() {

        DefaultTableModel modelo = (DefaultTableModel) this.jt_pacientes.getModel();
        modelo.setNumRows(0);

        String linhasMatriz[][] = controladorpaciente.getMinhaMatrizTexto();
        for (int i = 0; i < linhasMatriz.length; i++) {
            modelo.addRow(
                    new Object[]{
                        linhasMatriz[i][0],
                        linhasMatriz[i][1],
                        linhasMatriz[i][2],
                        linhasMatriz[i][3],
                        linhasMatriz[i][4]
                    }
            );

        }

    }

    public void carregaTabelaAgendamento() {

        DefaultTableModel modelo = (DefaultTableModel) this.jt_agendamentos.getModel();
        modelo.setNumRows(0);

        String linhasMatriz[][] = controladoragendamento.getMinhaMatrizTexto();
        for (int i = 0; i < linhasMatriz.length; i++) {
            modelo.addRow(
                    new Object[]{
                        linhasMatriz[i][0],
                        linhasMatriz[i][1],
                        linhasMatriz[i][2],
                        linhasMatriz[i][3],
                        linhasMatriz[i][4],
                        linhasMatriz[i][5],
                        linhasMatriz[i][6]
                    }
            );

        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agendamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_agendar;
    private javax.swing.JButton b_alterar;
    private javax.swing.JButton b_excluir;
    private javax.swing.JComboBox<Object> cb_medicos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jt_agendamentos;
    private javax.swing.JTable jt_pacientes;
    private com.toedter.calendar.JDateChooser t_data;
    private javax.swing.JTextField t_hora;
    private javax.swing.JTextField t_idpaciente;
    private javax.swing.JTextField t_paciente;
    private javax.swing.JTextField t_telefone;
    // End of variables declaration//GEN-END:variables
}
